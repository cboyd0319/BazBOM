name: Supply Chain Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

# Restrict default permissions following PYSEC_OMEGA standards
permissions:
  contents: read

# Prevent concurrent runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  sbom-and-sca:
    name: SBOM Generation and SCA
    runs-on: ubuntu-latest
    timeout-minutes: 90
    
    permissions:
      contents: read
      security-events: write  # For SARIF upload
      id-token: write  # For Sigstore OIDC signing
    
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      
      - name: Setup Java
        uses: actions/setup-java@5896cecc08fd8a1fbdfbb517a8bd08b42909ff46 # v4.7.0
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      
      - name: Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests jsonschema defusedxml
      
      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@4432ac8a2318fb254c5b9fe491b9d21a002d7122 # v0.8.1
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true
      
      - name: Generate SBOMs
        run: |
          bazel build //:sbom_all
          echo "✓ SBOM generation complete"
      
      - name: Generate Dependency Graphs
        run: |
          bazel build //:dep_graph_all
          echo "✓ Dependency graph generation complete"
      
      - name: Generate Provenance
        run: |
          bazel build //:workspace_provenance
          echo "✓ Provenance generation complete"
      
      - name: Detect Dependency Conflicts
        run: |
          bazel build //:conflict_report
          echo "✓ Conflict detection complete"
      
      - name: Generate License Report
        run: |
          bazel build //:license_report
          echo "✓ License compliance report generated"
      
      - name: Run SCA
        run: |
          bazel build //:sca_scan_osv || echo "⚠ SCA scan requires network access, skipping"
          echo "✓ SCA scanning attempted"
      
      - name: Generate SARIF
        run: |
          bazel build //:sca_sarif || echo "⚠ SARIF generation skipped (no SCA findings)"
          echo "✓ SARIF generation attempted"
      
      - name: Aggregate Metrics
        run: |
          bazel build //:metrics_report
          echo "✓ Supply chain metrics aggregated"
      
      - name: Supply Chain Risk Analysis
        run: |
          bazel build //:supply_chain_risk_report || echo "⚠ Supply chain risk analysis requires network access, skipping"
          echo "✓ Supply chain risk analysis attempted"
      
      - name: Apply VEX Statements
        run: |
          bazel build //:sca_findings_with_vex || echo "⚠ VEX processing skipped"
          echo "✓ VEX statements applied"
      
      - name: Upload SBOMs
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: sboms
          path: |
            bazel-bin/**/*.spdx.json
          if-no-files-found: warn
          retention-days: 90
      
      - name: Upload Dependency Graphs
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: dependency-graphs
          path: |
            bazel-bin/**/*.json
            bazel-bin/**/*.graphml
          if-no-files-found: warn
          retention-days: 30
      
      - name: Upload Provenance
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: provenance
          path: |
            bazel-bin/**/*.provenance.json
          if-no-files-found: warn
          retention-days: 90
      
      - name: Upload SARIF reports
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: sarif-reports
          path: |
            bazel-bin/**/*.sarif
          if-no-files-found: warn
          retention-days: 90
      
      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@6db8d6351fd0be61f9ed8ebd12ccd35dcec51fea # v3.27.9
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          sarif_file: bazel-bin/sca_findings.sarif
          category: supply-chain-sca
        continue-on-error: true  # Don't fail if no SARIF file exists yet
      
      - name: Upload Conflict Reports
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: conflict-reports
          path: |
            bazel-bin/conflicts.json
          if-no-files-found: warn
          retention-days: 30
      
      - name: Upload License Reports
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: license-reports
          path: |
            bazel-bin/license_report.json
          if-no-files-found: warn
          retention-days: 30
      
      - name: Upload Metrics
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: supply-chain-metrics
          path: |
            bazel-bin/supply_chain_metrics.json
          if-no-files-found: warn
          retention-days: 30
      
      - name: Upload Supply Chain Risk Reports
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: supply-chain-risks
          path: |
            bazel-bin/supply_chain_risks.json
          if-no-files-found: warn
          retention-days: 30
      
      - name: Upload VEX-Filtered Findings
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: vex-filtered-findings
          path: |
            bazel-bin/sca_findings_filtered.json
          if-no-files-found: warn
          retention-days: 30
  
  sign-and-attest:
    name: Sign SBOMs and Generate Attestations
    runs-on: ubuntu-latest
    needs: sbom-and-sca
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 30
    
    permissions:
      contents: read
      id-token: write  # Required for Sigstore keyless signing
      attestations: write  # For GitHub attestations
    
    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      
      - name: Setup Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests defusedxml
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@d7b7c0b5c656411ffb43dc6fa73a7d66e41ea3d5 # v3.8.1
        with:
          cosign-release: 'v2.4.1'
      
      - name: Download SBOM artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: sboms
          path: bazel-bin/
      
      - name: Sign SBOMs with Sigstore
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          mkdir -p bazel-bin/signatures
          
          echo "Signing SBOMs..."
          for sbom in bazel-bin/**/*.spdx.json; do
            if [ -f "$sbom" ]; then
              echo "Signing: $sbom"
              
              # Get base name without extension
              basename=$(basename "$sbom" .spdx.json)
              
              # Sign with cosign (creates signature and logs to Rekor)
              cosign sign-blob "$sbom" \
                --bundle "bazel-bin/signatures/${basename}.bundle.json" \
                --yes
              
              echo "✓ Signed: $basename"
            fi
          done
      
      - name: Generate in-toto Attestations
        run: |
          mkdir -p bazel-bin/attestations
          
          echo "Generating attestations..."
          for sbom in bazel-bin/**/*.spdx.json; do
            if [ -f "$sbom" ]; then
              basename=$(basename "$sbom" .spdx.json)
              
              # Generate in-toto attestation
              python3 tools/supplychain/intoto_attestation.py generate \
                "$sbom" \
                --output "bazel-bin/attestations/${basename}.attestation.json" \
                --builder-id "${GITHUB_REPOSITORY}" \
                --build-id "${GITHUB_RUN_ID}"
              
              echo "✓ Attestation created: ${basename}.attestation.json"
            fi
          done
      
      - name: Verify Signatures
        run: |
          echo "Verifying signatures..."
          for sbom in bazel-bin/**/*.spdx.json; do
            if [ -f "$sbom" ]; then
              basename=$(basename "$sbom" .spdx.json)
              bundle="bazel-bin/signatures/${basename}.bundle.json"
              
              if [ -f "$bundle" ]; then
                echo "Verifying: $sbom"
                
                python3 tools/supplychain/verify_sbom.py \
                  "$sbom" \
                  --bundle "$bundle" \
                  --cert-identity "https://github.com/${GITHUB_REPOSITORY}/.github/workflows/supplychain.yml@refs/heads/main" \
                  --cert-oidc-issuer "https://token.actions.githubusercontent.com" \
                  || echo "Warning: Verification failed for $basename"
              fi
            fi
          done
      
      - name: Upload Signed SBOMs
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        with:
          name: signed-sboms
          path: |
            bazel-bin/**/*.spdx.json
            bazel-bin/signatures/**/*.bundle.json
          retention-days: 90
          if-no-files-found: error
      
      - name: Upload Attestations
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        with:
          name: attestations
          path: |
            bazel-bin/attestations/**/*.attestation.json
          retention-days: 90
          if-no-files-found: warn
      
      - name: Generate Signing Summary
        run: |
          echo "## SBOM Signing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All SBOMs have been signed with Sigstore and logged to Rekor transparency log." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Signed Artifacts:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          for sbom in bazel-bin/**/*.spdx.json; do
            if [ -f "$sbom" ]; then
              basename=$(basename "$sbom")
              bundle="bazel-bin/signatures/$(basename "$sbom" .spdx.json).bundle.json"
              
              echo "- **$basename**" >> $GITHUB_STEP_SUMMARY
              
              if [ -f "$bundle" ]; then
                # Extract Rekor entry from bundle
                rekor_entry=$(python3 -c "import json; print(json.load(open('$bundle')).get('rekor_entry', 'N/A'))")
                echo "  - Rekor Entry: $rekor_entry" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Verification:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Download and verify SBOM" >> $GITHUB_STEP_SUMMARY
          echo "gh run download ${GITHUB_RUN_ID} -n signed-sboms" >> $GITHUB_STEP_SUMMARY
          echo "cosign verify-blob sbom.spdx.json \\" >> $GITHUB_STEP_SUMMARY
          echo "  --bundle bundle.json \\" >> $GITHUB_STEP_SUMMARY
          echo "  --certificate-identity 'https://github.com/${GITHUB_REPOSITORY}/.github/workflows/supplychain.yml@refs/heads/main' \\" >> $GITHUB_STEP_SUMMARY
          echo "  --certificate-oidc-issuer 'https://token.actions.githubusercontent.com'" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
