name: BazBOM Incremental Scan

on:
  pull_request:
    paths:
      - '**.java'
      - '**.kt'
      - '**.scala'
      - '**/BUILD.bazel'
      - '**/BUILD'
      - 'maven_install.json'

permissions:
  contents: read
  security-events: write

jobs:
  incremental-scan:
    runs-on: ubuntu-latest
    name: Incremental SBOM and SCA
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0  # Need full history for git diff
          persist-credentials: false

      - name: Setup Java
        uses: actions/setup-java@5896cecc08fd8a1fbdfbb517a8bd08b42909ff46 # v4.7.0
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          pip install requests jsonschema

      - name: Install RipGrep
        run: |
          curl -LO https://github.com/BurntSushi/ripgrep/releases/download/14.1.0/ripgrep_14.1.0-1_amd64.deb
          sudo dpkg -i ripgrep_14.1.0-1_amd64.deb
          rg --version

      - name: Setup Bazel
        uses: bazel-contrib/setup-bazel@e403ad507104847c3539436a14f16b779aa17af5 # v0.8.1
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true

      - name: Find changed Bazel packages
        id: changed
        run: |
          # Find modified BUILD files using RipGrep for fast filtering
          CHANGED_FILES=$(git diff origin/${{ github.base_ref }}...HEAD --name-only)
          
          # Use RipGrep to filter BUILD files
          CHANGED_BUILD_FILES=$(echo "$CHANGED_FILES" | rg "BUILD\.bazel$|BUILD$" || echo "")
          
          if [ -z "$CHANGED_BUILD_FILES" ]; then
            echo "No BUILD files changed, scanning all"
            echo "packages=//:sbom_all" >> $GITHUB_OUTPUT
          else
            # Extract package directories
            CHANGED_PACKAGES=$(echo "$CHANGED_BUILD_FILES" | \
              xargs dirname | \
              awk '{print "//"$1":*"}' | \
              tr '\n' ' ')
            
            echo "packages=$CHANGED_PACKAGES" >> $GITHUB_OUTPUT
          fi
          
          echo "Changed packages: $CHANGED_PACKAGES"

      - name: Run incremental analysis
        run: |
          python3 tools/supplychain/incremental_analyzer.py \
            --workspace . \
            --base-ref origin/${{ github.base_ref }} \
            --output-format json \
            --output incremental-analysis.json \
            --fast-mode

      - name: Display analysis results
        run: |
          if [ -f incremental-analysis.json ]; then
            echo "Incremental analysis results:"
            cat incremental-analysis.json | python3 -m json.tool
          fi

      - name: Run BazBOM on changed targets
        run: |
          # Use incremental analyzer to determine targets
          TARGETS=$(python3 tools/supplychain/incremental_analyzer.py \
            --workspace . \
            --base-ref origin/${{ github.base_ref }} \
            --output-format targets \
            --fast-mode)
          
          if [ "$TARGETS" = "//..." ]; then
            echo "Building all targets"
            bazel build //:sbom_all || echo "SBOM generation failed"
          else
            echo "Building incremental targets: $TARGETS"
            # For now, just build workspace SBOM
            bazel build //:workspace_sbom || echo "SBOM generation failed"
          fi

      - name: Run incremental SCA
        run: |
          bazel build //:sca_scan_osv || echo "âš  SCA scan requires network access, skipping"

      - name: Upload incremental SBOM
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: incremental-sbom
          path: |
            bazel-bin/**/*.spdx.json
            incremental-analysis.json
          retention-days: 30
          if-no-files-found: warn

      - name: Upload SCA findings
        uses: actions/upload-artifact@84480863f228bb9747b473957fcc9e309aa96097 # v4.4.2
        if: always()
        with:
          name: incremental-sca-findings
          path: |
            bazel-bin/sca_findings.json
            bazel-bin/sca_findings.sarif
          retention-days: 30
          if-no-files-found: warn

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@6db8d6351fd0be61f9ed8ebd12ccd35dcec51fea # v3.27.9
        if: always() && hashFiles('bazel-bin/sca_findings.sarif') != ''
        with:
          sarif_file: bazel-bin/sca_findings.sarif
          category: bazbom-incremental-sca

      - name: Performance summary
        if: always()
        run: |
          echo "## Incremental Analysis Performance" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f incremental-analysis.json ]; then
            FAST_MODE=$(cat incremental-analysis.json | python3 -c "import sys, json; print(json.load(sys.stdin).get('fast_mode_enabled', False))")
            TARGET_COUNT=$(cat incremental-analysis.json | python3 -c "import sys, json; print(json.load(sys.stdin).get('target_count', 0))")
            
            echo "- **Fast mode (RipGrep)**: $FAST_MODE" >> $GITHUB_STEP_SUMMARY
            echo "- **Targets analyzed**: $TARGET_COUNT" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Analysis data not available" >> $GITHUB_STEP_SUMMARY
          fi
