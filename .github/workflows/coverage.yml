name: Coverage

on:
  push:
    branches: [ main ]
    paths:
      - 'tools/supplychain/**/*.py'
      - 'tools/supplychain/tests/**/*.py'
      - '.github/workflows/coverage.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'tools/supplychain/**/*.py'
      - 'tools/supplychain/tests/**/*.py'
      - '.github/workflows/coverage.yml'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  coverage:
    name: Code Coverage Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1
          persist-credentials: false

      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install requests pyyaml jinja2 jsonschema

      - name: Run tests with coverage
        working-directory: tools/supplychain
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -euo pipefail
          pytest tests/ \
            --override-ini="addopts=" \
            --cov=. \
            --cov-branch \
            --cov-report=xml:../../coverage.xml \
            --cov-report=html:../../htmlcov \
            --cov-report=term-missing:skip-covered \
            --ignore=tests/fixtures \
            -q \
            | tee ../../coverage-output.txt

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        if: always() && hashFiles('coverage.xml') != ''
        with:
          files: ./coverage.xml
          flags: unittests
          name: bazbom-coverage
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverage-report-html
          path: htmlcov/
          retention-days: 30
        if: always()

      - name: Coverage summary
        if: always()
        shell: bash
        run: |
          {
            echo "## ðŸ“Š Coverage Report"
            echo ""
            echo '```'
            tail -20 coverage-output.txt || echo "No coverage data available"
            echo '```'
            echo ""
            echo "Full HTML report available in artifacts."
          } >> "${GITHUB_STEP_SUMMARY}"
