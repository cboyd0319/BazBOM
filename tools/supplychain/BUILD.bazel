# Supply chain security tooling

package(default_visibility = ["//visibility:public"])

# Export Python scripts as executable files
exports_files(
    [
        "write_sbom.py",
        "osv_query.py",
        "sarif_adapter.py",
        "extract_maven_deps.py",
        "purl_generator.py",
        "conflict_detector.py",
        "license_analyzer.py",
        "metrics_aggregator.py",
    ],
    visibility = ["//visibility:public"],
)

# Shell wrapper for write_sbom
sh_binary(
    name = "write_sbom",
    srcs = ["write_sbom.py"],
)

# Shell wrapper for osv_query
sh_binary(
    name = "osv_query",
    srcs = ["osv_query.py"],
)

# Shell wrapper for sarif_adapter
sh_binary(
    name = "sarif_adapter",
    srcs = ["sarif_adapter.py"],
)

# Shell wrapper for extract_maven_deps
sh_binary(
    name = "extract_maven_deps",
    srcs = ["extract_maven_deps.py"],
)

# Shell wrapper for graph_generator
sh_binary(
    name = "graph_generator",
    srcs = ["graph_generator.py"],
)

# Shell wrapper for provenance_builder
sh_binary(
    name = "provenance_builder",
    srcs = ["provenance_builder.py"],
)

# Shell wrapper for purl_generator
sh_binary(
    name = "purl_generator",
    srcs = ["purl_generator.py"],
)

# Shell wrapper for conflict_detector
sh_binary(
    name = "conflict_detector",
    srcs = ["conflict_detector.py"],
)

# Shell wrapper for license_analyzer
sh_binary(
    name = "license_analyzer",
    srcs = ["license_analyzer.py"],
)

# Shell wrapper for metrics_aggregator
sh_binary(
    name = "metrics_aggregator",
    srcs = ["metrics_aggregator.py"],
)

# Export aspect and macro definitions
exports_files([
    "aspects.bzl",
    "defs.bzl",
])
