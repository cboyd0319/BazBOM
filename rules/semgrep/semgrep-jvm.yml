# BazBOM Curated JVM Ruleset for Semgrep
# This ruleset combines critical security rules for JVM languages (Java, Kotlin, Scala)
# Focused on: deserialization, SQL injection, XSS, XXE, SSRF, command injection, crypto

rules:
  - id: java-deserialization-objectinputstream
    patterns:
      - pattern: new ObjectInputStream(...)
      - pattern-not-inside: |
          class $CLASS {
            ...
          }
    message: |
      Unsafe deserialization using ObjectInputStream. This can lead to remote code execution.
      Consider using a safe deserialization library or implement a whitelist of allowed classes.
    languages: [java]
    severity: ERROR
    metadata:
      cwe: "CWE-502"
      owasp: "A08:2021 - Software and Data Integrity Failures"
      references:
        - https://owasp.org/www-community/vulnerabilities/Deserialization_of_untrusted_data

  - id: java-sql-injection
    patterns:
      - pattern-either:
          - pattern: |
              $STMT.executeQuery($X + ...)
          - pattern: |
              $STMT.executeUpdate($X + ...)
          - pattern: |
              $STMT.execute($X + ...)
      - pattern-not: |
          $STMT.executeQuery("...")
    message: |
      Potential SQL injection. Use PreparedStatement with parameterized queries instead.
    languages: [java]
    severity: ERROR
    metadata:
      cwe: "CWE-89"
      owasp: "A03:2021 - Injection"

  - id: java-xxe
    patterns:
      - pattern-either:
          - pattern: |
              $FACTORY.newDocumentBuilder()
          - pattern: |
              $FACTORY.newSAXParser()
          - pattern: |
              SAXParserFactory.newInstance()
      - pattern-not-inside: |
          $FACTORY.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
          ...
    message: |
      XML External Entity (XXE) vulnerability. Configure parser to disable external entities.
    languages: [java]
    severity: ERROR
    metadata:
      cwe: "CWE-611"
      owasp: "A05:2021 - Security Misconfiguration"

  - id: java-command-injection
    patterns:
      - pattern-either:
          - pattern: Runtime.getRuntime().exec($X + ...)
          - pattern: |
              new ProcessBuilder($X + ...)
      - pattern-not: Runtime.getRuntime().exec("...")
    message: |
      Potential command injection. Avoid constructing shell commands from user input.
      Use ProcessBuilder with individual arguments instead.
    languages: [java]
    severity: ERROR
    metadata:
      cwe: "CWE-78"
      owasp: "A03:2021 - Injection"

  - id: java-weak-crypto
    patterns:
      - pattern-either:
          - pattern: Cipher.getInstance("DES/...")
          - pattern: Cipher.getInstance("RC4")
          - pattern: MessageDigest.getInstance("MD5")
          - pattern: MessageDigest.getInstance("SHA1")
    message: |
      Weak cryptographic algorithm detected. Use AES-256, SHA-256, or SHA-3 instead.
    languages: [java]
    severity: WARNING
    metadata:
      cwe: "CWE-327"
      owasp: "A02:2021 - Cryptographic Failures"

  - id: java-hardcoded-secret
    patterns:
      - pattern-either:
          - pattern: |
              $PASSWORD = "...";
          - pattern: |
              $API_KEY = "...";
          - pattern: |
              $SECRET = "...";
      - metavariable-regex:
          metavariable: $PASSWORD
          regex: "(?i)(password|pwd|passwd)"
      - metavariable-regex:
          metavariable: $API_KEY
          regex: "(?i)(api[_-]?key|apikey)"
      - metavariable-regex:
          metavariable: $SECRET
          regex: "(?i)(secret|token)"
    message: |
      Hardcoded secret detected. Store secrets in environment variables or a secure vault.
    languages: [java]
    severity: WARNING
    metadata:
      cwe: "CWE-798"
      owasp: "A07:2021 - Identification and Authentication Failures"

  - id: java-insecure-random
    patterns:
      - pattern: new Random()
      - pattern-not-inside: |
          // test
          ...
    message: |
      Using insecure Random for security-sensitive operations. Use SecureRandom instead.
    languages: [java]
    severity: WARNING
    metadata:
      cwe: "CWE-330"
      owasp: "A02:2021 - Cryptographic Failures"

  - id: java-path-traversal
    patterns:
      - pattern-either:
          - pattern: new File($X + ...)
          - pattern: Paths.get($X + ...)
          - pattern: new FileInputStream($X + ...)
      - pattern-not: new File("...")
    message: |
      Potential path traversal vulnerability. Validate and sanitize file paths from user input.
    languages: [java]
    severity: ERROR
    metadata:
      cwe: "CWE-22"
      owasp: "A01:2021 - Broken Access Control"

  - id: java-ldap-injection
    patterns:
      - pattern: |
          $CTX.search(..., $FILTER + ...)
      - pattern-not: |
          $CTX.search(..., "...")
    message: |
      Potential LDAP injection. Use parameterized queries or escape user input.
    languages: [java]
    severity: ERROR
    metadata:
      cwe: "CWE-90"
      owasp: "A03:2021 - Injection"

  - id: java-ssrf
    patterns:
      - pattern-either:
          - pattern: new URL($X + ...).openConnection()
          - pattern: |
              $HTTP.get($X + ...)
      - pattern-not: new URL("...").openConnection()
    message: |
      Potential Server-Side Request Forgery (SSRF). Validate URLs and restrict to allowed domains.
    languages: [java]
    severity: ERROR
    metadata:
      cwe: "CWE-918"
      owasp: "A10:2021 - Server-Side Request Forgery"
