# Root build file for BazBOM

# Generate dependency list from WORKSPACE
genrule(
    name = "extract_deps",
    srcs = ["WORKSPACE"],
    outs = ["workspace_deps.json"],
    cmd = "$(location //tools/supplychain:extract_maven_deps) --workspace $< --output $@",
    tools = ["//tools/supplychain:extract_maven_deps"],
    visibility = ["//visibility:public"],
)

# Generate SBOM from extracted dependencies
genrule(
    name = "workspace_sbom",
    srcs = [":workspace_deps.json"],
    outs = ["workspace_sbom.spdx.json"],
    cmd = "$(location //tools/supplychain:write_sbom) --input $< --output $@ --name bazbom-workspace",
    tools = ["//tools/supplychain:write_sbom"],
    visibility = ["//visibility:public"],
)

# Run SCA scan using OSV (requires network access)
genrule(
    name = "sca_scan_osv",
    srcs = [":workspace_sbom"],
    outs = ["sca_findings.json"],
    cmd = "$(location //tools/supplychain:osv_query) --sbom $< --output $@ --batch || echo '{\"packages_scanned\": 0, \"vulnerabilities_found\": 0, \"vulnerabilities\": []}' > $@",
    tools = ["//tools/supplychain:osv_query"],
    tags = ["requires-network"],
    visibility = ["//visibility:public"],
)

# Convert SCA findings to SARIF
genrule(
    name = "sca_sarif",
    srcs = [":sca_findings.json"],
    outs = ["sca_findings.sarif"],
    cmd = "$(location //tools/supplychain:sarif_adapter) --input $< --output $@",
    tools = ["//tools/supplychain:sarif_adapter"],
    visibility = ["//visibility:public"],
)

# Filegroup to collect all SBOMs
filegroup(
    name = "sbom_all",
    srcs = [
        ":workspace_sbom",
    ],
    visibility = ["//visibility:public"],
)

# Filegroup for all supply chain artifacts
filegroup(
    name = "supply_chain_all",
    srcs = [
        ":workspace_sbom",
        ":sca_findings.json",
        ":sca_sarif",
    ],
    visibility = ["//visibility:public"],
)
